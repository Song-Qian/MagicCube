[http]
# 服务启动端口
port = 8080
# 服务访问IP
listener = localhost
# 浏览器本地session保存名称
session_name = "magic_cube_sid"
# 是否启用HTTP报文头保护
helmet = true
# 是否开启有助于减轻跨站点脚本攻击等的标头
# helmet.contentSecurityPolicy = true
# helmet.contentSecurityPolicy.useDefaults = true
# helmet.contentSecurityPolicy.directives.defaultSrc[] = "'self'"
# helmet.contentSecurityPolicy.directives.scriptSrc[] = "'self'"
# helmet.contentSecurityPolicy.directives.baseUri[] = "'self'"
# helmet.contentSecurityPolicy.directives.blockAllMixedContent = true
# helmet.contentSecurityPolicy.directives.fontSrc[] = "'self'"
# helmet.contentSecurityPolicy.directives.fontSrc[] = "https:"
# helmet.contentSecurityPolicy.directives.fontSrc[] = "data:"
# helmet.contentSecurityPolicy.directives.frameAncestors[] = "'self'"
# helmet.contentSecurityPolicy.directives.imgSrc[] = "'self'"
# helmet.contentSecurityPolicy.directives.objectSrc[] = "'none'"
# helmet.contentSecurityPolicy.directives.scriptSrcAttr[] = "'none'"
# helmet.contentSecurityPolicy.directives.styleSrc[] = "'self'"
# helmet.contentSecurityPolicy.directives.styleSrc[] = "https:"
# helmet.contentSecurityPolicy.directives.styleSrc[] = "'unsafe-inline'"
# helmet.contentSecurityPolicy.directives.upgradeInsecureRequests = true
# helmet.contentSecurityPolicy.reportOnly = true
# 是否开启防止文档加载任何未明确授予文档权限的跨源资源
# helmet.crossOriginEmbedderPolicy = true
# 响应头允许您确保顶级文档不与跨源文档共享浏览上下文组 unsafe-none | same-origin-allow-popups | same-origin
# helmet.crossOriginOpenerPolicy = true
# helmet.crossOriginOpenerPolicy.policy = "unsafe-none"
# 响应标头传达了浏览器阻止对给定资源的 no-cors 跨源/跨站点请求的愿望 same-site | same-origin | cross-origin
# helmet.crossOriginResourcePolicy = true
# helmet.crossOriginResourcePolicy.policy = "same-site"
# 是否开启有助于缓解错误颁发的 SSL 证书的标头
# helmet.expectCt = true
# helmet.expectCt.maxAge = 86400
# helmet.expectCt.enforce = true
# helmet.expectCt.reportUri = "https://magic-cube.com/report"
# 设置Referrer-Policy  strict-origin-when-cross-origin | no-referrer | no-referrer-when-downgrade | origin | origin-when-cross-origin | same-origin | strict-origin
# helmet.referrerPolicy = true
# helmet.referrerPolicy.policy = "strict-origin-when-cross-origin"
# 设置Strict-Transport-Security标头
# helmet.hsts = true
# helmet.hsts.maxAge = 15552000;
# helmet.hsts.includeSubDomains = false
# helmet.hsts.preload = false
# 将X-Content-Type-Options标题设置为nosniff 这减轻了可能导致安全漏洞的MIME 类型嗅探
# helmet.noSniff = true
# 设置Origin-Agent-Cluster标头，它提供了一种允许 Web 应用程序隔离其源的机制
# helmet.originAgentCluster = true
# 设置X-DNS-Prefetch-Control标头以帮助控制 DNS 预取，这可以以牺牲性能为代价来提高用户隐私
# helmet.dnsPrefetchControl = true
# helmet.dnsPrefetchControl.allow = false
# 设置X-Download-Options特定于 Internet Explorer 8的标头
# helmet.ieNoOpen = true
# 设置X-Frame-Options标题以帮助您减轻点击劫持攻击 deny | sameorigin | allow-from
# helmet.frameguard = true
# helmet.frameguard.action = "deny"
# 设置X-Permitted-Cross-Domain-Policies标头，它告诉一些客户（主要是 Adob​​e 产品）您的域加载跨域内容的策略 "none" | "master-only" | "by-content-type" | "all"
# helmet.permittedCrossDomainPolicies = true
# helmet.permittedCrossDomainPolicies.permittedPolicies = "none"
# 删除X-Powered-By在某些框架（如 Express）中默认设置的标头
# helmet.hidePoweredBy = true
# 通过将X-XSS-Protection标头设置为0
# helmet.xssFilter = true

[websocket]
port = 18888
cube_root_port = 18889
