[http]
; 应用名称，在使用微服务时，此名称需要唯一
name = "magic app"
; 服务启动端口
port = 8080
; 服务访问IP
listener = localhost
; 浏览器本地session保存名称
session_name = "magic_cube_sid"
; http 请求正文体大小
maxSize = "2mb"
; 是否启用HTTP报文头保护
helmet = true
; 是否启用HTTP跨域
cors = true

; 应用App自动扫描加载处理器信息
[http.server]
; 服务器启动后，访问路径
base = "/"
; 静态文件逻辑路径前缀
staticPrefix = "/"
; 静态文件物理地址
staticDir = "./static"
; 扫描静态文件扩展名， 默认检索 .js 文件
extension[] = "js"
extension[] = "css"
extension[] = "jpg"
extension[] = "jpeg"
extension[] = "png"

; 是否开启有助于减轻跨站点脚本攻击等的标头
[http.helmet]
; contentSecurityPolicy = true
; crossOriginOpenerPolicy = true
; crossOriginResourcePolicy = true
expectCt = true
referrerPolicy = true
hsts = true
dnsPrefetchControl = true
frameguard = true
permittedCrossDomainPolicies = true
; 将X-Content-Type-Options标题设置为nosniff 这减轻了可能导致安全漏洞的MIME 类型嗅探
noSniff = true
; 设置Origin-Agent-Cluster标头，它提供了一种允许 Web 应用程序隔离其源的机制
; originAgentCluster = true
; 是否开启防止文档加载任何未明确授予文档权限的跨源资源
; crossOriginEmbedderPolicy = true
; 设置X-Download-Options特定于 Internet Explorer 8的标头
ieNoOpen = true
; 删除X-Powered-By在某些框架（如 Express）中默认设置的标头
hidePoweredBy = true
; 通过将X-XSS-Protection标头设置为0
xssFilter = true

; [http.helmet.contentSecurityPolicy]
; useDefaults = true
; reportOnly = true

[http.helmet.contentSecurityPolicy.directives]
defaultSrc[] = "'self'"
scriptSrc[] = "'self'"
; baseUri[] = "'self'"
; blockAllMixedContent[] = true
; fontSrc[] = "'self'"
; fontSrc[] = "https:"
; fontSrc[] = "data:"
; frameAncestors[] = "'self'"
; imgSrc[] = "'self'"
; objectSrc[] = "'none'"
; scriptSrcAttr[] = "'none'"
styleSrc[] = "'self'"
styleSrc[] = "http:"
styleSrc[] = "'unsafe-inline'"
; upgradeInsecureRequests[] = true

; 响应头允许您确保顶级文档不与跨源文档共享浏览上下文组 unsafe-none | same-origin-allow-popups | same-origin
; [http.helmet.crossOriginOpenerPolicy]
; policy = "same-origin"

; 响应标头传达了浏览器阻止对给定资源的 no-cors 跨源/跨站点请求的愿望 same-site | same-origin | cross-origin
; [http.helmet.crossOriginResourcePolicy]
; policy = "same-origin"

; 是否开启有助于缓解错误颁发的 SSL 证书的标头
; [http.helmet.expectCt]
; maxAge = 86400
; enforce = true
; reportUri = "https://magic-cube.com/report"
; 设置Referrer-Policy  strict-origin-when-cross-origin | no-referrer | no-referrer-when-downgrade | origin | origin-when-cross-origin | same-origin | strict-origin
; [http.helmet.referrerPolicy]
; policy = "no-referrer"

; 设置Strict-Transport-Security标头
; [http.helmet.hsts]
; maxAge = 15552000;
; includeSubDomains = false
; preload = false

; 设置X-DNS-Prefetch-Control标头以帮助控制 DNS 预取，这可以以牺牲性能为代价来提高用户隐私
; [http.helmet.dnsPrefetchControl]
; allow = true

; 设置X-Frame-Options标题以帮助您减轻点击劫持攻击 deny | sameorigin | allow-from
; [http.helmet.frameguard]
; action = "deny"

; 设置X-Permitted-Cross-Domain-Policies标头，它告诉一些客户（主要是 Adob​​e 产品）您的域加载跨域内容的策略 "none" | "master-only" | "by-content-type" | "all"
; [http.helmet.permittedCrossDomainPolicies]
; permittedPolicies = "all"

; 是否启用HTTP跨域
[http.cors]
; 配置Access-Control-Allow-Origin CORS 标头
; origin = "*"
; 配置Access-Control-Max-Age CORS 标头
; maxAge = 600
; 提供用于成功OPTIONS请求的状态代码
; optionsSuccessStatus = 200
; 配置Access-Control-Allow-Methods CORS 标头. GET,HEAD,PUT,PATCH,POST,DELETE
methods = "*"
; 配置Access-Control-Allow-Headers CORS 标头
allowedHeaders = "magic-cube-sessionid"
; 配置Access-Control-Expose-Headers CORS 头
; exposedHeaders = "Content-Range,X-Content-Range"
; 配置Access-Control-Allow-Credentials CORS 标头
credentials = true
; 将 CORS 预检响应传递给下一个处理程序
preflightContinue = true

[socket]
; 是否启动WebSocket通信
enabled = true
; WebSocket 心跳时间
pingTimeout = 30000
; WebSocket Ping轮询时间
pingInterval = 20000
; WebSocket 转输数据大小
maxHttpBufferSize = 1073741824
; 是否复用 http.cors 配置
cors = true

;[database]
; 连接客户端类型
; client = "mysql"
; log 日志是否启用
; logger = true
; 连接配置项
;[database.connection]
; 是否启用自定义配置，启用自定义配置，连接数据库时，使用回调函数方式获取连接信息
; custom = false
; 数据库服务tcp地址
; host = "localhost"
; 数据库服务tcp端口
; port = 3306
; 数据库用户名
; user = "root"
; 数据库密码
; password = "123456"
; 数据库库名
; database = "myapp"
; 数据Socket连接地址，当tcp连接无效时，可以使用Socket连接。
; socketPath = "/tmp/socket.sock",
; 连接超时时间（秒）
; timeout = 60
; sqlite3 连接方式配置
; filename = ":memory:"
; sqlite3 连接方式参数
; flags[] = 'OPEN_URI'
; flags[] = 'OPEN_SHAREDCACHE'
; [database.pool]
; 连接池最小值
; min = 0
; 连接池最小值
; max = 8